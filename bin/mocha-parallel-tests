#!/usr/bin/env node

'use strict';

import yargs from 'yargs';
import binHelper from '../bin-helper';
import getOptions from 'mocha/bin/options';

// support --opts
// getOptions() changes process.argv
getOptions();

const argv = yargs.parse(process.argv);

function onExit(failsOccured) {
    if (argv.exit === undefined) {
        process.exit(failsOccured);
    } else {
        // if --no-exit argv is present wait for exit event
        process.on('exit', () => {
            process.exit(failsOccured);
        });
    }
}

binHelper(argv).then(({failsOccured, reporter}) => {
    // wait for reporter to finish its operations
    // exit with code equal to number of failed tests
    process.nextTick(() => {
        if (reporter.done) {
            reporter.done(failsOccured, onExit);
        } else {
            onExit(failsOccured);
        }
    });
});
